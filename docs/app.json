[{"name":"app.R","content":"# ================================================================================\n# Chargement packages & data\n# ================================================================================\n\n#### Packages ####\n# -------------- #\nlibrary(shiny)\nlibrary(shinydashboard)\nlibrary(shinyWidgets)\nlibrary(shinyhelper)\n\nlibrary(sf)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(knitr)\nlibrary(plotly)\nlibrary(ggplot2)\nlibrary(terra)\n\n#### Local data ####\n# ---------------- #\n# utilisation des terres\ncomp <- readRDS(\"/home/local/USHERBROOKE/juhc3201/BdQc/ReseauSuivi/Data/g15_indicators/results/ESA/2010-2020_comp2010_ISQ_reg.rds\")\n\n# Several Polygons for Qc\n# -----------------------\n# ---- data pour decoupage admin\ndec <- st_read(\"/home/local/USHERBROOKE/juhc3201/BdQc/ReseauSuivi/Data/QUEBEC_regions/BDGA_1M(adm)_SHP/regio_s.shp\")\n# selection des regions d'interet\nadmin <- dec[dec$RES_NM_REG %in% c(\n    \"Bas-Saint-Laurent\",\n    \"Capitale-Nationale\",\n    \"Estrie\",\n    \"Montréal\",\n    \"Outaouais\",\n    \"Abitibi-Témiscamingue\",\n    \"Gaspésie–Îles-de-la-Madeleine\",\n    \"Chaudière-Appalaches\",\n    \"Laval\",\n    \"Lanaudière\",\n    \"Laurentides\",\n    \"Montérégie\"\n), ]\n\n\nserver <- function(input, output, session) {\n    observe_helpers()\n\n\n    # Ref map plot\n    output$map_ref <- renderPlot({\n        par(mar = rep(0, 4))\n        plot(st_geometry(dec), col = ifelse(dec$RES_NM_REG %in% admin$RES_NM_REG, \"grey\", \"#bebebe67\"))\n        plot(st_geometry(dec[dec$RES_NM_REG == input$admin_select, ]), col = \"red\", add = TRUE)\n    })\n\n    # trend plot\n    output$trend_plot <- renderPlot({\n        x <- comp[comp$region == input$admin_select, ]\n\n        ggplot(\n            data = x,\n            aes(x = year, y = comp_rate, group = IPCC_class, colour = IPCC_class)\n        ) +\n            geom_line(linewidth = 1) +\n            labs(title = unique(x$region), color = \"Catégories\") +\n            scale_color_manual(\n                labels = c(\"agriculture\", \"forest\", \"grassland\", \"other\", \"settlement\", \"wetland\"),\n                values = c(\n                    \"#993300\",\n                    \"#006600\",\n                    \"#CC9900\",\n                    \"#96ac9d\",\n                    \"#CC0000\",\n                    \"#019191\"\n                )\n            )\n        # +\n        # scale_x_continuous(name = \"Année\", limits = c(2010, 2020), breaks = 2010:2020) +\n        # scale_y_continuous(name = \"Variation (%)\", limits = c(-35, 35))\n    })\n\n    # pie chart\n    output$pie <- renderPlotly({\n        data <- comp[comp$region == input$admin_select & comp$year == 2010, ]\n        colors <- c(\n            \"#993300\", # agriculture\n            \"#006600\", # forest\n            \"#CC9900\", # grassland\n            \"#96ac9d\", # other\n            \"#CC0000\", # settlement\n            \"#019191\" # wetland\n        )\n\n        fig <- plot_ly(data,\n            labels = ~IPCC_class, values = ~count_tot, type = \"pie\", textposition = \"inside\",\n            textinfo = \"label+percent\",\n            insidetextfont = list(color = \"#FFFFFF\"),\n            hoverinfo = \"text\",\n            text = ~ paste(\"n = \", count_tot),\n            marker = list(\n                colors = colors,\n                line = list(color = \"#FFFFFF\", width = 1)\n            ),\n\n            # The 'pull' attribute can also be used to create space between the sectors\n\n            showlegend = FALSE\n        )\n\n        fig <- fig %>% layout(\n            xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),\n            yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)\n        )\n    })\n}\n\nui <- navbarPage(\n    \"Évolution de l'utilisation des terres au Qc\",\n    sidebarLayout(\n        sidebarPanel(\n            h4(\"Région administrative\"),\n            selectInput(\n                inputId = \"admin_select\",\n                label = \"\",\n                choices = admin$RES_NM_REG[order(admin$RES_NM_REG)]\n            )\n            # )\n            ,\n            plotOutput(\"map_ref\", width = \"100%\")\n        ),\n        mainPanel(\n            # First row\n            box(\n                title = \"Trend\",\n                width = 6,\n                plotOutput(\"trend_plot\")\n            ),\n            box(\n                title = \"Pie chart\",\n                width = 6,\n                plotlyOutput(\"pie\")\n            )\n        )\n    )\n)\nshinyApp(ui = ui, server = server)\n","type":"text"}]
